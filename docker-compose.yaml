version: "3.8"

services:
  postgre:
    image: postgres:14.9-alpine3.18
    container_name: postgre
    healthcheck:
      #CHANGE 1: this command checks if the database is ready, right on the source db server
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
  redis:
    image: redis:alpine3.18
    container_name: redis
    ports:
      - "6378:6379"
  cc-auth:
    container_name: cc-auth
    image: cc-auth:latest
    # network_mode: host
    build:
      context: .
      dockerfile: ./cc-auth/Dockerfile
    depends_on:
      postgre: 
        condition: service_healthy
    ports:
      - "9999:9999"
  cc-transaction:
    container_name: cc-transaction
    image: cc-transaction:latest
    # network_mode: host
    build:
      context: .
      dockerfile: ./cc-transaction/Dockerfile
    depends_on:
      postgre: 
        condition: service_healthy
    ports:
      - "9090:9090"
      - "9089:9089"
  cc-callback:
    container_name: cc-callback
    image: cc-callback:latest
    # network_mode: host
    build:
      context: .
      dockerfile: ./cc-callback/Dockerfile
    depends_on:
      postgre: 
        condition: service_healthy
    ports:
      - "9091:9091"
      - "9095:9095"
  merchant:
    container_name: merchant
    image: merchant:latest
    # network_mode: host
    build:
      context: .
      dockerfile: ./merchant/Dockerfile
    depends_on:
      postgre: 
        condition: service_healthy
    ports:
      - "8888:8888"
      - "8887:8887"
